{"ast":null,"code":"var _jsxFileName = \"D:\\\\khaled\\\\NADAFA\\\\FrontEnd\\\\src\\\\ScannerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Html5QrcodeScanner, Html5QrcodeScanType } from 'html5-qrcode';\nimport './QrStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRPDFApp = () => {\n  _s();\n  const location = useLocation();\n  const [spreadsheetId, setSpreadsheetId] = useState('');\n  const [scannedUrl, setScannedUrl] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isScanning, setIsScanning] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const [scanner, setScanner] = useState(null);\n  useEffect(() => {\n    // Check if mobile device\n    setIsMobile(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\n    // Extract spreadsheet ID from navigation state\n    const state = location.state || {};\n    setSpreadsheetId(state.spreadsheetId || '');\n  }, [location]);\n  useEffect(() => {\n    if (isScanning && !isMobile && !scanner) {\n      const html5QrcodeScanner = new Html5QrcodeScanner(\"qr-reader\", {\n        fps: 10,\n        qrbox: 250,\n        supportedScanTypes: [Html5QrcodeScanType.SCAN_TYPE_CAMERA],\n        rememberLastUsedCamera: true\n      }, false);\n      html5QrcodeScanner.render(decodedText => handleScan({\n        text: decodedText\n      }), error => handleScanError(error));\n      setScanner(html5QrcodeScanner);\n      return () => {\n        if (scanner) {\n          scanner.clear().catch(error => {\n            console.error(\"Failed to clear scanner\", error);\n          });\n        }\n      };\n    }\n  }, [isScanning, isMobile]);\n  const handleScan = async data => {\n    if (data !== null && data !== void 0 && data.text) {\n      try {\n        // Validate URL format\n        new URL(data.text);\n        setScannedUrl(data.text);\n        setIsScanning(false);\n        if (scanner) {\n          scanner.pause();\n        }\n        await processScannedUrl(data.text, spreadsheetId);\n      } catch (err) {\n        setError('Invalid QR code URL format');\n      }\n    }\n  };\n  const handleScanError = err => {\n    console.error('QR Scan Error:', err);\n    setError('Scanner error: ' + err.message);\n    setIsScanning(false);\n    if (scanner) {\n      scanner.pause();\n    }\n  };\n  const processScannedUrl = async (url, spreadsheetId) => {\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\n    setIsLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const response = await fetch(`${backendUrl}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          scanned_url: url,\n          scanned_at: new Date().toISOString(),\n          spreadsheet_id: spreadsheetId\n        })\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error('Registration failed');\n      }\n      setResult(data.data);\n    } catch (err) {\n      setError('Error: ' + err.message);\n      console.error('Processing Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const restartScanning = () => {\n    setIsScanning(true);\n    setError('');\n    setResult(null);\n    setScannedUrl('');\n    if (scanner) {\n      scanner.resume();\n    }\n  };\n  const openNativeCamera = () => {\n    // Try to open ZXing barcode scanner if installed\n    if (/Android/i.test(navigator.userAgent)) {\n      window.location.href = 'intent://scan/#Intent;scheme=zxing;package=com.google.zxing.client.android;end';\n\n      // Fallback after delay\n      setTimeout(() => {\n        startWebBasedScanner();\n      }, 1000);\n    } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n      // iOS - try to open native camera\n      startWebBasedScanner();\n    } else {\n      // Other devices\n      startWebBasedScanner();\n    }\n  };\n  const startWebBasedScanner = () => {\n    setIsScanning(true);\n    if (scanner) {\n      scanner.resume();\n    }\n  };\n  const tryNativeBarcodeScanner = async () => {\n    try {\n      if (!('BarcodeDetector' in window)) {\n        throw new Error('BarcodeDetector not supported');\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\"\n        }\n      });\n      const videoElement = document.createElement('video');\n      videoElement.srcObject = stream;\n      await videoElement.play();\n      const barcodeDetector = new BarcodeDetector({\n        formats: ['qr_code']\n      });\n      const results = await barcodeDetector.detect(videoElement);\n      if (results.length > 0) {\n        handleScan({\n          text: results[0].rawValue\n        });\n      }\n      stream.getTracks().forEach(track => track.stop());\n    } catch (err) {\n      console.log('Native scanner not available, falling back to web scanner');\n      openNativeCamera();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(''),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), isMobile && isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-scanner-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: tryNativeBarcodeScanner,\n        className: \"scanner-option-button\",\n        children: \"Use Native Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startWebBasedScanner,\n        className: \"scanner-option-button secondary\",\n        children: \"Use Web Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), !isMobile && isScanning && !result && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"qr-reader\",\n      className: \"scanner-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), scannedUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-result\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scanned URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 14\n        }, this), \" \", scannedUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), (result || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartScanning,\n      className: \"restart-button\",\n      children: \"Scan Another Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registration Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 16\n          }, this), \" \", result.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 16\n          }, this), \" \", result.Title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 16\n          }, this), \" \", result.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 16\n          }, this), \" \", result.Phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preferred Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 16\n          }, this), \" \", result.Preferred_Contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(QRPDFApp, \"lS/IBXrHfj7tXdIW3VppD9TBk3M=\", false, function () {\n  return [useLocation];\n});\n_c = QRPDFApp;\nexport default QRPDFApp;\nvar _c;\n$RefreshReg$(_c, \"QRPDFApp\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Html5QrcodeScanner","Html5QrcodeScanType","jsxDEV","_jsxDEV","QRPDFApp","_s","location","spreadsheetId","setSpreadsheetId","scannedUrl","setScannedUrl","result","setResult","error","setError","isLoading","setIsLoading","isScanning","setIsScanning","isMobile","setIsMobile","scanner","setScanner","test","navigator","userAgent","state","html5QrcodeScanner","fps","qrbox","supportedScanTypes","SCAN_TYPE_CAMERA","rememberLastUsedCamera","render","decodedText","handleScan","text","handleScanError","clear","catch","console","data","URL","pause","processScannedUrl","err","message","url","backendUrl","process","env","REACT_APP_BACKEND_URL","response","fetch","method","headers","credentials","body","JSON","stringify","scanned_url","scanned_at","Date","toISOString","spreadsheet_id","ok","json","Error","status","success","restartScanning","resume","openNativeCamera","window","href","setTimeout","startWebBasedScanner","tryNativeBarcodeScanner","stream","mediaDevices","getUserMedia","video","facingMode","videoElement","document","createElement","srcObject","play","barcodeDetector","BarcodeDetector","formats","results","detect","length","rawValue","getTracks","forEach","track","stop","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","id","Name","Title","Email","Phone","Preferred_Contact","_c","$RefreshReg$"],"sources":["D:/khaled/NADAFA/FrontEnd/src/ScannerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Html5QrcodeScanner, Html5QrcodeScanType } from 'html5-qrcode';\r\nimport './QrStyles.css';\r\n\r\nconst QRPDFApp = () => {\r\n  const location = useLocation();\r\n  const [spreadsheetId, setSpreadsheetId] = useState('');\r\n  const [scannedUrl, setScannedUrl] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isScanning, setIsScanning] = useState(true);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [scanner, setScanner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if mobile device\r\n    setIsMobile(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\r\n    \r\n    // Extract spreadsheet ID from navigation state\r\n    const state = location.state || {};\r\n    setSpreadsheetId(state.spreadsheetId || '');\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (isScanning && !isMobile && !scanner) {\r\n      const html5QrcodeScanner = new Html5QrcodeScanner(\r\n        \"qr-reader\",\r\n        { \r\n          fps: 10, \r\n          qrbox: 250,\r\n          supportedScanTypes: [Html5QrcodeScanType.SCAN_TYPE_CAMERA],\r\n          rememberLastUsedCamera: true\r\n        },\r\n        false\r\n      );\r\n      \r\n      html5QrcodeScanner.render(\r\n        (decodedText) => handleScan({ text: decodedText }),\r\n        (error) => handleScanError(error)\r\n      );\r\n      \r\n      setScanner(html5QrcodeScanner);\r\n\r\n      return () => {\r\n        if (scanner) {\r\n          scanner.clear().catch(error => {\r\n            console.error(\"Failed to clear scanner\", error);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  }, [isScanning, isMobile]);\r\n\r\n  const handleScan = async (data) => {\r\n    if (data?.text) {\r\n      try {\r\n        // Validate URL format\r\n        new URL(data.text);\r\n        setScannedUrl(data.text);\r\n        setIsScanning(false);\r\n        if (scanner) {\r\n          scanner.pause();\r\n        }\r\n        await processScannedUrl(data.text, spreadsheetId);\r\n      } catch (err) {\r\n        setError('Invalid QR code URL format');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleScanError = (err) => {\r\n    console.error('QR Scan Error:', err);\r\n    setError('Scanner error: ' + err.message);\r\n    setIsScanning(false);\r\n    if (scanner) {\r\n      scanner.pause();\r\n    }\r\n  };\r\n\r\n  const processScannedUrl = async (url, spreadsheetId) => {\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    setResult(null);\r\n\r\n    try {\r\n      const response = await fetch(`${backendUrl}/register`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ \r\n          scanned_url: url,\r\n          scanned_at: new Date().toISOString(),\r\n          spreadsheet_id: spreadsheetId\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error('Registration failed');\r\n      }\r\n\r\n      setResult(data.data);\r\n    } catch (err) {\r\n      setError('Error: ' + err.message);\r\n      console.error('Processing Error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const restartScanning = () => {\r\n    setIsScanning(true);\r\n    setError('');\r\n    setResult(null);\r\n    setScannedUrl('');\r\n    if (scanner) {\r\n      scanner.resume();\r\n    }\r\n  };\r\n\r\n  const openNativeCamera = () => {\r\n    // Try to open ZXing barcode scanner if installed\r\n    if (/Android/i.test(navigator.userAgent)) {\r\n      window.location.href = 'intent://scan/#Intent;scheme=zxing;package=com.google.zxing.client.android;end';\r\n      \r\n      // Fallback after delay\r\n      setTimeout(() => {\r\n        startWebBasedScanner();\r\n      }, 1000);\r\n    } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\r\n      // iOS - try to open native camera\r\n      startWebBasedScanner();\r\n    } else {\r\n      // Other devices\r\n      startWebBasedScanner();\r\n    }\r\n  };\r\n\r\n  const startWebBasedScanner = () => {\r\n    setIsScanning(true);\r\n    if (scanner) {\r\n      scanner.resume();\r\n    }\r\n  };\r\n\r\n  const tryNativeBarcodeScanner = async () => {\r\n    try {\r\n      if (!('BarcodeDetector' in window)) {\r\n        throw new Error('BarcodeDetector not supported');\r\n      }\r\n      \r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { facingMode: \"environment\" }\r\n      });\r\n      \r\n      const videoElement = document.createElement('video');\r\n      videoElement.srcObject = stream;\r\n      await videoElement.play();\r\n      \r\n      const barcodeDetector = new BarcodeDetector({ formats: ['qr_code'] });\r\n      const results = await barcodeDetector.detect(videoElement);\r\n      \r\n      if (results.length > 0) {\r\n        handleScan({ text: results[0].rawValue });\r\n      }\r\n      \r\n      stream.getTracks().forEach(track => track.stop());\r\n    } catch (err) {\r\n      console.log('Native scanner not available, falling back to web scanner');\r\n      openNativeCamera();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scanner-container\">\r\n      <h2>QR Scanner</h2>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <p>{error}</p>\r\n          <button onClick={() => setError('')}>Dismiss</button>\r\n        </div>\r\n      )}\r\n\r\n      {isMobile && isScanning && (\r\n        <div className=\"mobile-scanner-options\">\r\n          <button onClick={tryNativeBarcodeScanner} className=\"scanner-option-button\">\r\n            Use Native Scanner\r\n          </button>\r\n          <button onClick={startWebBasedScanner} className=\"scanner-option-button secondary\">\r\n            Use Web Camera\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!isMobile && isScanning && !result && !error && (\r\n        <div id=\"qr-reader\" className=\"scanner-wrapper\"></div>\r\n      )}\r\n\r\n      {scannedUrl && (\r\n        <div className=\"scan-result\">\r\n          <p><strong>Scanned URL:</strong> {scannedUrl}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {isLoading && (\r\n        <div className=\"loading-indicator\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Processing...</p>\r\n        </div>\r\n      )}\r\n\r\n      {(result || error) && (\r\n        <button \r\n          onClick={restartScanning}\r\n          className=\"restart-button\"\r\n        >\r\n          Scan Another Code\r\n        </button>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"result-container\">\r\n          <h3>Registration Details:</h3>\r\n          <div className=\"registration-details\">\r\n            <p><strong>Name:</strong> {result.Name}</p>\r\n            <p><strong>Title:</strong> {result.Title}</p>\r\n            <p><strong>Email:</strong> {result.Email}</p>\r\n            <p><strong>Phone:</strong> {result.Phone}</p>\r\n            <p><strong>Preferred Contact:</strong> {result.Preferred_Contact}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPDFApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}