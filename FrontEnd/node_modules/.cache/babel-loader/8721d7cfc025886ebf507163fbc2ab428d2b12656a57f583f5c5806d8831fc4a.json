{"ast":null,"code":"var _jsxFileName = \"D:\\\\khaled\\\\NADAFA\\\\FrontEnd\\\\src\\\\ScannerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport QrReader from 'react-qr-scanner';\nimport './QrStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRPDFApp = () => {\n  _s();\n  const location = useLocation();\n  const [spreadsheetId, setSpreadsheetId] = useState('');\n  const [scannedUrl, setScannedUrl] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isScanning, setIsScanning] = useState(true);\n  const [cameraConstraints, setCameraConstraints] = useState({\n    video: {\n      facingMode: \"environment\",\n      width: {\n        ideal: 1280\n      },\n      height: {\n        ideal: 720\n      },\n      advanced: [{\n        exposureCompensation: {\n          min: -12,\n          max: 12,\n          step: 1,\n          value: 2\n        }\n      }, {\n        whiteBalanceMode: 'continuous'\n      }, {\n        focusMode: 'continuous'\n      }]\n    }\n  });\n  useEffect(() => {\n    // Extract spreadsheet ID from navigation state\n    const state = location.state || {};\n    setSpreadsheetId(state.spreadsheetId || '');\n  }, [location]);\n  useEffect(() => {\n    setIsScanning(true);\n    return () => {\n      // Cleanup when component unmounts\n      setIsScanning(false);\n    };\n  }, []);\n  const handleScan = async data => {\n    if (data !== null && data !== void 0 && data.text) {\n      try {\n        // Validate URL format\n        new URL(data.text);\n        setScannedUrl(data.text);\n        setIsScanning(false);\n        await processScannedUrl(data.text, spreadsheetId);\n      } catch (err) {\n        // If URL validation fails, try alternative validation\n        if (!isValidQRCodeFormat(data.text)) {\n          setError('Invalid QR code format');\n        } else {\n          setError('Unknown scanning error');\n        }\n      }\n    }\n  };\n  const isValidQRCodeFormat = text => {\n    // Add more flexible validation logic here\n    const urlPatterns = [/^https?:\\/\\//,\n    // Standard URL\n    /^(lid|eid)=\\d+/,\n    // Specific ID formats\n    /^TC-\\d{4}-\\d{4}-TICKET-\\d{3}$/ // Ticket-specific format\n    ];\n    return urlPatterns.some(pattern => pattern.test(text));\n  };\n  const handleScanError = err => {\n    console.error('QR Scan Error:', err);\n    setError('Camera access or scanning error: ' + err.message);\n\n    // Attempt to adjust camera settings on error\n    setCameraConstraints(prev => ({\n      ...prev,\n      video: {\n        ...prev.video,\n        advanced: [{\n          exposureCompensation: {\n            value: prev.video.advanced[0].exposureCompensation.value + 1\n          }\n        }]\n      }\n    }));\n    setIsScanning(false);\n  };\n  const processScannedUrl = async (url, spreadsheetId) => {\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\n    setIsLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const response = await fetch(`${backendUrl}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          scanned_url: url,\n          scanned_at: new Date().toISOString(),\n          spreadsheet_id: spreadsheetId\n        })\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error('Registration failed');\n      }\n      setResult(data.data);\n    } catch (err) {\n      setError('Error: ' + err.message);\n      console.error('Processing Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const restartScanning = () => {\n    setIsScanning(true);\n    setError('');\n    setResult(null);\n    setScannedUrl('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(''),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), isScanning && !result && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onError: handleScanError,\n        onScan: handleScan,\n        constraints: cameraConstraints,\n        style: {\n          filter: 'contrast(150%) brightness(130%) grayscale(30%)',\n          transform: 'scaleX(-1)' // Mirror effect can sometimes help\n        },\n        className: \"qr-reader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), scannedUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-result\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scanned URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 14\n        }, this), \" \", scannedUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), (result || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartScanning,\n      className: \"restart-button\",\n      children: \"Scan Another Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registration Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 16\n          }, this), \" \", result.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 16\n          }, this), \" \", result.Title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 16\n          }, this), \" \", result.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 16\n          }, this), \" \", result.Phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preferred Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 16\n          }, this), \" \", result.Preferred_Contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(QRPDFApp, \"i0xQ+gwMSWH/XOFkixpzkSUMjI4=\", false, function () {\n  return [useLocation];\n});\n_c = QRPDFApp;\nexport default QRPDFApp;\nvar _c;\n$RefreshReg$(_c, \"QRPDFApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","QrReader","jsxDEV","_jsxDEV","QRPDFApp","_s","location","spreadsheetId","setSpreadsheetId","scannedUrl","setScannedUrl","result","setResult","error","setError","isLoading","setIsLoading","isScanning","setIsScanning","cameraConstraints","setCameraConstraints","video","facingMode","width","ideal","height","advanced","exposureCompensation","min","max","step","value","whiteBalanceMode","focusMode","state","handleScan","data","text","URL","processScannedUrl","err","isValidQRCodeFormat","urlPatterns","some","pattern","test","handleScanError","console","message","prev","url","backendUrl","process","env","REACT_APP_BACKEND_URL","response","fetch","method","headers","credentials","body","JSON","stringify","scanned_url","scanned_at","Date","toISOString","spreadsheet_id","ok","json","Error","status","success","restartScanning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","delay","onError","onScan","constraints","style","filter","transform","Name","Title","Email","Phone","Preferred_Contact","_c","$RefreshReg$"],"sources":["D:/khaled/NADAFA/FrontEnd/src/ScannerPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport QrReader from 'react-qr-scanner';\r\nimport './QrStyles.css';\r\n\r\nconst QRPDFApp = () => {\r\n  const location = useLocation();\r\n  const [spreadsheetId, setSpreadsheetId] = useState('');\r\n  const [scannedUrl, setScannedUrl] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isScanning, setIsScanning] = useState(true);\r\n  const [cameraConstraints, setCameraConstraints] = useState({\r\n    video: {\r\n      facingMode: \"environment\",\r\n      width: { ideal: 1280 },\r\n      height: { ideal: 720 },\r\n      advanced: [\r\n        { exposureCompensation: { min: -12, max: 12, step: 1, value: 2 } },\r\n        { whiteBalanceMode: 'continuous' },\r\n        { focusMode: 'continuous' }\r\n      ]\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Extract spreadsheet ID from navigation state\r\n    const state = location.state || {};\r\n    setSpreadsheetId(state.spreadsheetId || '');\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setIsScanning(true);\r\n    return () => {\r\n      // Cleanup when component unmounts\r\n      setIsScanning(false);\r\n    };\r\n  }, []);\r\n\r\n  const handleScan = async (data) => {\r\n    if (data?.text) {\r\n      try {\r\n        // Validate URL format\r\n        new URL(data.text);\r\n        setScannedUrl(data.text);\r\n        setIsScanning(false);\r\n        await processScannedUrl(data.text, spreadsheetId);\r\n      } catch (err) {\r\n        // If URL validation fails, try alternative validation\r\n        if (!isValidQRCodeFormat(data.text)) {\r\n          setError('Invalid QR code format');\r\n        } else {\r\n          setError('Unknown scanning error');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isValidQRCodeFormat = (text) => {\r\n    // Add more flexible validation logic here\r\n    const urlPatterns = [\r\n      /^https?:\\/\\//,  // Standard URL\r\n      /^(lid|eid)=\\d+/,  // Specific ID formats\r\n      /^TC-\\d{4}-\\d{4}-TICKET-\\d{3}$/  // Ticket-specific format\r\n    ];\r\n    return urlPatterns.some(pattern => pattern.test(text));\r\n  };\r\n\r\n  const handleScanError = (err) => {\r\n    console.error('QR Scan Error:', err);\r\n    setError('Camera access or scanning error: ' + err.message);\r\n    \r\n    // Attempt to adjust camera settings on error\r\n    setCameraConstraints(prev => ({\r\n      ...prev,\r\n      video: {\r\n        ...prev.video,\r\n        advanced: [\r\n          { exposureCompensation: { value: prev.video.advanced[0].exposureCompensation.value + 1 } }\r\n        ]\r\n      }\r\n    }));\r\n\r\n    setIsScanning(false);\r\n  };\r\n\r\n  const processScannedUrl = async (url, spreadsheetId) => {\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    setResult(null);\r\n\r\n    try {\r\n      const response = await fetch(`${backendUrl}/register`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ \r\n          scanned_url: url,\r\n          scanned_at: new Date().toISOString(),\r\n          spreadsheet_id: spreadsheetId\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error('Registration failed');\r\n      }\r\n\r\n      setResult(data.data);\r\n    } catch (err) {\r\n      setError('Error: ' + err.message);\r\n      console.error('Processing Error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const restartScanning = () => {\r\n    setIsScanning(true);\r\n    setError('');\r\n    setResult(null);\r\n    setScannedUrl('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"scanner-container\">\r\n      <h2>QR Scanner</h2>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <p>{error}</p>\r\n          <button onClick={() => setError('')}>Dismiss</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Scanner is always shown unless there's a result or error */}\r\n      {isScanning && !result && !error && (\r\n        <div className=\"scanner-wrapper\">\r\n          <QrReader\r\n            delay={300}\r\n            onError={handleScanError}\r\n            onScan={handleScan}\r\n            constraints={cameraConstraints}\r\n            style={{\r\n              filter: 'contrast(150%) brightness(130%) grayscale(30%)', \r\n              transform: 'scaleX(-1)' // Mirror effect can sometimes help\r\n            }}\r\n            className=\"qr-reader\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {scannedUrl && (\r\n        <div className=\"scan-result\">\r\n          <p><strong>Scanned URL:</strong> {scannedUrl}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {isLoading && (\r\n        <div className=\"loading-indicator\">\r\n          <p>Processing...</p>\r\n        </div>\r\n      )}\r\n\r\n      {(result || error) && (\r\n        <button \r\n          onClick={restartScanning}\r\n          className=\"restart-button\"\r\n        >\r\n          Scan Another Code\r\n        </button>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"result-container\">\r\n          <h3>Registration Details:</h3>\r\n          <div className=\"registration-details\">\r\n            <p><strong>Name:</strong> {result.Name}</p>\r\n            <p><strong>Title:</strong> {result.Title}</p>\r\n            <p><strong>Email:</strong> {result.Email}</p>\r\n            <p><strong>Phone:</strong> {result.Phone}</p>\r\n            <p><strong>Preferred Contact:</strong> {result.Preferred_Contact}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPDFApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}