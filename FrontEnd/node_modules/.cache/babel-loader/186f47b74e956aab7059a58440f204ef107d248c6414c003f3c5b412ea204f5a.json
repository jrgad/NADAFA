{"ast":null,"code":"var _jsxFileName = \"D:\\\\khaled\\\\NADAFA\\\\FrontEnd\\\\src\\\\ScannerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport './QrStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRPDFApp = () => {\n  _s();\n  const location = useLocation();\n  const [spreadsheetId, setSpreadsheetId] = useState('');\n  const [scannedUrl, setScannedUrl] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isScanning, setIsScanning] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    // Check if mobile device\n    setIsMobile(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\n    // Extract spreadsheet ID from navigation state\n    const state = location.state || {};\n    setSpreadsheetId(state.spreadsheetId || '');\n  }, [location]);\n  useEffect(() => {\n    if (isScanning && !isMobile) {\n      const html5QrcodeScanner = new Html5QrcodeScanner(\"qr-reader\", {\n        fps: 10,\n        qrbox: 250\n      }, false);\n      html5QrcodeScanner.render(decodedText => handleScan({\n        text: decodedText\n      }), error => handleScanError(error));\n      return () => html5QrcodeScanner.clear();\n    }\n  }, [isScanning, isMobile]);\n  const handleScan = async data => {\n    if (data !== null && data !== void 0 && data.text) {\n      try {\n        // Validate URL format\n        new URL(data.text);\n        setScannedUrl(data.text);\n        setIsScanning(false);\n        await processScannedUrl(data.text, spreadsheetId);\n      } catch (err) {\n        setError('Invalid QR code URL format');\n      }\n    }\n  };\n\n  // ... rest of your existing methods ...\n\n  const openNativeCamera = () => {\n    // Try to open ZXing barcode scanner if installed\n    window.location.href = 'intent://scan/#Intent;scheme=zxing;package=com.google.zxing.client.android;end';\n\n    // Fallback: Just open camera\n    setTimeout(() => {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        // User granted camera access\n        setIsScanning(true);\n      }).catch(err => {\n        setError('Camera access denied: ' + err.message);\n      });\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(''),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), isMobile && isScanning && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openNativeCamera,\n      className: \"native-scanner-button\",\n      children: \"Open Device Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), !isMobile && isScanning && !result && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"qr-reader\",\n      className: \"scanner-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(QRPDFApp, \"xZZ9P4PTm6nVE3klQZR5Jh+UVDQ=\", false, function () {\n  return [useLocation];\n});\n_c = QRPDFApp;\nexport default QRPDFApp;\nvar _c;\n$RefreshReg$(_c, \"QRPDFApp\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Html5QrcodeScanner","jsxDEV","_jsxDEV","QRPDFApp","_s","location","spreadsheetId","setSpreadsheetId","scannedUrl","setScannedUrl","result","setResult","error","setError","isLoading","setIsLoading","isScanning","setIsScanning","isMobile","setIsMobile","test","navigator","userAgent","state","html5QrcodeScanner","fps","qrbox","render","decodedText","handleScan","text","handleScanError","clear","data","URL","processScannedUrl","err","openNativeCamera","window","href","setTimeout","mediaDevices","getUserMedia","video","then","stream","catch","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","id","_c","$RefreshReg$"],"sources":["D:/khaled/NADAFA/FrontEnd/src/ScannerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport './QrStyles.css';\r\n\r\nconst QRPDFApp = () => {\r\n  const location = useLocation();\r\n  const [spreadsheetId, setSpreadsheetId] = useState('');\r\n  const [scannedUrl, setScannedUrl] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isScanning, setIsScanning] = useState(true);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if mobile device\r\n    setIsMobile(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\r\n    \r\n    // Extract spreadsheet ID from navigation state\r\n    const state = location.state || {};\r\n    setSpreadsheetId(state.spreadsheetId || '');\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (isScanning && !isMobile) {\r\n      const html5QrcodeScanner = new Html5QrcodeScanner(\r\n        \"qr-reader\",\r\n        { fps: 10, qrbox: 250 },\r\n        false\r\n      );\r\n      \r\n      html5QrcodeScanner.render(\r\n        (decodedText) => handleScan({ text: decodedText }),\r\n        (error) => handleScanError(error)\r\n      );\r\n      \r\n      return () => html5QrcodeScanner.clear();\r\n    }\r\n  }, [isScanning, isMobile]);\r\n\r\n  const handleScan = async (data) => {\r\n    if (data?.text) {\r\n      try {\r\n        // Validate URL format\r\n        new URL(data.text);\r\n        setScannedUrl(data.text);\r\n        setIsScanning(false);\r\n        await processScannedUrl(data.text, spreadsheetId);\r\n      } catch (err) {\r\n        setError('Invalid QR code URL format');\r\n      }\r\n    }\r\n  };\r\n\r\n  // ... rest of your existing methods ...\r\n\r\n  const openNativeCamera = () => {\r\n    // Try to open ZXing barcode scanner if installed\r\n    window.location.href = 'intent://scan/#Intent;scheme=zxing;package=com.google.zxing.client.android;end';\r\n    \r\n    // Fallback: Just open camera\r\n    setTimeout(() => {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then(stream => {\r\n          // User granted camera access\r\n          setIsScanning(true);\r\n        })\r\n        .catch(err => {\r\n          setError('Camera access denied: ' + err.message);\r\n        });\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"scanner-container\">\r\n      <h2>QR Scanner</h2>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <p>{error}</p>\r\n          <button onClick={() => setError('')}>Dismiss</button>\r\n        </div>\r\n      )}\r\n\r\n      {isMobile && isScanning && (\r\n        <button onClick={openNativeCamera} className=\"native-scanner-button\">\r\n          Open Device Scanner\r\n        </button>\r\n      )}\r\n\r\n      {!isMobile && isScanning && !result && !error && (\r\n        <div id=\"qr-reader\" className=\"scanner-wrapper\"></div>\r\n      )}\r\n\r\n      {/* ... rest of your existing JSX ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPDFApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}