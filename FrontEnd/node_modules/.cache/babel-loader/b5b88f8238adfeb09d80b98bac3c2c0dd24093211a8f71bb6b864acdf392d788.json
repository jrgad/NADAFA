{"ast":null,"code":"var _jsxFileName = \"D:\\\\khaled\\\\NADAFA\\\\FrontEnd\\\\src\\\\ScannerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport QrReader from 'react-qr-scanner';\nimport './QrStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRPDFApp = () => {\n  _s();\n  const location = useLocation();\n  const [spreadsheetId, setSpreadsheetId] = useState('');\n  const [scannedUrl, setScannedUrl] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isScanning, setIsScanning] = useState(true);\n  const [useNativeScanner, setUseNativeScanner] = useState(false);\n\n  // Default constraints with modern approach\n  const defaultConstraints = {\n    video: {\n      facingMode: \"environment\",\n      width: {\n        ideal: 1280\n      },\n      height: {\n        ideal: 720\n      }\n    },\n    audio: false\n  };\n  useEffect(() => {\n    // Extract spreadsheet ID from navigation state\n    const state = location.state || {};\n    setSpreadsheetId(state.spreadsheetId || '');\n\n    // Detect if we're on a mobile device\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setUseNativeScanner(isMobile);\n  }, [location]);\n  useEffect(() => {\n    setIsScanning(true);\n    return () => {\n      // Cleanup when component unmounts\n      setIsScanning(false);\n    };\n  }, []);\n  const handleScan = async data => {\n    if (data !== null && data !== void 0 && data.text) {\n      try {\n        // Validate URL format\n        new URL(data.text);\n        setScannedUrl(data.text);\n        setIsScanning(false);\n        await processScannedUrl(data.text, spreadsheetId);\n      } catch (err) {\n        // If URL validation fails, try alternative validation\n        if (!isValidQRCodeFormat(data.text)) {\n          setError('Invalid QR code format');\n        } else {\n          setError('Unknown scanning error');\n        }\n      }\n    }\n  };\n  const isValidQRCodeFormat = text => {\n    // Add more flexible validation logic here\n    const urlPatterns = [/^https?:\\/\\//,\n    // Standard URL\n    /^(lid|eid)=\\d+/,\n    // Specific ID formats\n    /^TC-\\d{4}-\\d{4}-TICKET-\\d{3}$/ // Ticket-specific format\n    ];\n    return urlPatterns.some(pattern => pattern.test(text));\n  };\n  const handleNativeScan = e => {\n    const url = e.target.value;\n    if (url) {\n      try {\n        new URL(url); // Validate URL format\n        setScannedUrl(url);\n        setIsScanning(false);\n        processScannedUrl(url, spreadsheetId);\n      } catch (err) {\n        setError('Invalid URL format');\n      }\n    }\n  };\n  const handleScanError = err => {\n    console.error('QR Scan Error:', err);\n    setError('Camera access or scanning error: ' + err.message);\n    setIsScanning(false);\n  };\n  const processScannedUrl = async (url, spreadsheetId) => {\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\n    setIsLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const response = await fetch(`${backendUrl}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          scanned_url: url,\n          scanned_at: new Date().toISOString(),\n          spreadsheet_id: spreadsheetId\n        })\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error('Registration failed');\n      }\n      setResult(data.data);\n    } catch (err) {\n      setError('Error: ' + err.message);\n      console.error('Processing Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const restartScanning = () => {\n    setIsScanning(true);\n    setError('');\n    setResult(null);\n    setScannedUrl('');\n  };\n  const toggleScannerMethod = () => {\n    setUseNativeScanner(!useNativeScanner);\n    restartScanning();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(''),\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleScannerMethod,\n        className: `toggle-button ${!useNativeScanner ? 'active' : ''}`,\n        children: \"Web Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleScannerMethod,\n        className: `toggle-button ${useNativeScanner ? 'active' : ''}`,\n        children: \"Mobile Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), isScanning && !useNativeScanner && !result && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onError: handleScanError,\n        onScan: handleScan,\n        constraints: defaultConstraints,\n        style: {\n          filter: 'contrast(120%) brightness(110%)'\n        },\n        className: \"qr-reader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), isScanning && useNativeScanner && !result && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"native-scan-option\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Point your camera at a QR code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        inputMode: \"url\",\n        placeholder: \"Click here to scan QR code\",\n        onFocus: e => {\n          e.target.value = '';\n        },\n        onChange: handleNativeScan,\n        className: \"native-scan-input\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hint-text\",\n        children: \"Your device's QR scanner will open automatically\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this), scannedUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-result\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scanned URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 14\n        }, this), \" \", scannedUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), (result || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartScanning,\n      className: \"restart-button\",\n      children: \"Scan Another Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registration Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 16\n          }, this), \" \", result.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 16\n          }, this), \" \", result.Title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 16\n          }, this), \" \", result.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 16\n          }, this), \" \", result.Phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preferred Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 16\n          }, this), \" \", result.Preferred_Contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(QRPDFApp, \"4EKYYHCztlFs8V/zJpf+3ITSYn0=\", false, function () {\n  return [useLocation];\n});\n_c = QRPDFApp;\nexport default QRPDFApp;\nvar _c;\n$RefreshReg$(_c, \"QRPDFApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","QrReader","jsxDEV","_jsxDEV","QRPDFApp","_s","location","spreadsheetId","setSpreadsheetId","scannedUrl","setScannedUrl","result","setResult","error","setError","isLoading","setIsLoading","isScanning","setIsScanning","useNativeScanner","setUseNativeScanner","defaultConstraints","video","facingMode","width","ideal","height","audio","state","isMobile","test","navigator","userAgent","handleScan","data","text","URL","processScannedUrl","err","isValidQRCodeFormat","urlPatterns","some","pattern","handleNativeScan","e","url","target","value","handleScanError","console","message","backendUrl","process","env","REACT_APP_BACKEND_URL","response","fetch","method","headers","credentials","body","JSON","stringify","scanned_url","scanned_at","Date","toISOString","spreadsheet_id","ok","json","Error","status","success","restartScanning","toggleScannerMethod","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","delay","onError","onScan","constraints","style","filter","type","inputMode","placeholder","onFocus","onChange","autoFocus","Name","Title","Email","Phone","Preferred_Contact","_c","$RefreshReg$"],"sources":["D:/khaled/NADAFA/FrontEnd/src/ScannerPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport QrReader from 'react-qr-scanner';\r\nimport './QrStyles.css';\r\n\r\nconst QRPDFApp = () => {\r\n  const location = useLocation();\r\n  const [spreadsheetId, setSpreadsheetId] = useState('');\r\n  const [scannedUrl, setScannedUrl] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isScanning, setIsScanning] = useState(true);\r\n  const [useNativeScanner, setUseNativeScanner] = useState(false);\r\n\r\n  // Default constraints with modern approach\r\n  const defaultConstraints = {\r\n    video: {\r\n      facingMode: \"environment\",\r\n      width: { ideal: 1280 },\r\n      height: { ideal: 720 }\r\n    },\r\n    audio: false\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Extract spreadsheet ID from navigation state\r\n    const state = location.state || {};\r\n    setSpreadsheetId(state.spreadsheetId || '');\r\n    \r\n    // Detect if we're on a mobile device\r\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    setUseNativeScanner(isMobile);\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setIsScanning(true);\r\n    return () => {\r\n      // Cleanup when component unmounts\r\n      setIsScanning(false);\r\n    };\r\n  }, []);\r\n\r\n  const handleScan = async (data) => {\r\n    if (data?.text) {\r\n      try {\r\n        // Validate URL format\r\n        new URL(data.text);\r\n        setScannedUrl(data.text);\r\n        setIsScanning(false);\r\n        await processScannedUrl(data.text, spreadsheetId);\r\n      } catch (err) {\r\n        // If URL validation fails, try alternative validation\r\n        if (!isValidQRCodeFormat(data.text)) {\r\n          setError('Invalid QR code format');\r\n        } else {\r\n          setError('Unknown scanning error');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isValidQRCodeFormat = (text) => {\r\n    // Add more flexible validation logic here\r\n    const urlPatterns = [\r\n      /^https?:\\/\\//,  // Standard URL\r\n      /^(lid|eid)=\\d+/,  // Specific ID formats\r\n      /^TC-\\d{4}-\\d{4}-TICKET-\\d{3}$/  // Ticket-specific format\r\n    ];\r\n    return urlPatterns.some(pattern => pattern.test(text));\r\n  };\r\n\r\n  const handleNativeScan = (e) => {\r\n    const url = e.target.value;\r\n    if (url) {\r\n      try {\r\n        new URL(url); // Validate URL format\r\n        setScannedUrl(url);\r\n        setIsScanning(false);\r\n        processScannedUrl(url, spreadsheetId);\r\n      } catch (err) {\r\n        setError('Invalid URL format');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleScanError = (err) => {\r\n    console.error('QR Scan Error:', err);\r\n    setError('Camera access or scanning error: ' + err.message);\r\n    setIsScanning(false);\r\n  };\r\n\r\n  const processScannedUrl = async (url, spreadsheetId) => {\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    setResult(null);\r\n\r\n    try {\r\n      const response = await fetch(`${backendUrl}/register`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ \r\n          scanned_url: url,\r\n          scanned_at: new Date().toISOString(),\r\n          spreadsheet_id: spreadsheetId\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error('Registration failed');\r\n      }\r\n\r\n      setResult(data.data);\r\n    } catch (err) {\r\n      setError('Error: ' + err.message);\r\n      console.error('Processing Error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const restartScanning = () => {\r\n    setIsScanning(true);\r\n    setError('');\r\n    setResult(null);\r\n    setScannedUrl('');\r\n  };\r\n\r\n  const toggleScannerMethod = () => {\r\n    setUseNativeScanner(!useNativeScanner);\r\n    restartScanning();\r\n  };\r\n\r\n  return (\r\n    <div className=\"scanner-container\">\r\n      <h2>QR Scanner</h2>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <p>{error}</p>\r\n          <button onClick={() => setError('')}>Dismiss</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Scanner selection toggle */}\r\n      <div className=\"scanner-toggle\">\r\n        <button \r\n          onClick={toggleScannerMethod}\r\n          className={`toggle-button ${!useNativeScanner ? 'active' : ''}`}\r\n        >\r\n          Web Camera\r\n        </button>\r\n        <button \r\n          onClick={toggleScannerMethod}\r\n          className={`toggle-button ${useNativeScanner ? 'active' : ''}`}\r\n        >\r\n          Mobile Scanner\r\n        </button>\r\n      </div>\r\n\r\n      {/* Web Camera Scanner */}\r\n      {isScanning && !useNativeScanner && !result && !error && (\r\n        <div className=\"scanner-wrapper\">\r\n          <QrReader\r\n            delay={300}\r\n            onError={handleScanError}\r\n            onScan={handleScan}\r\n            constraints={defaultConstraints}\r\n            style={{\r\n              filter: 'contrast(120%) brightness(110%)'\r\n            }}\r\n            className=\"qr-reader\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Mobile Native Scanner */}\r\n      {isScanning && useNativeScanner && !result && !error && (\r\n        <div className=\"native-scan-option\">\r\n          <p>Point your camera at a QR code:</p>\r\n          <input\r\n            type=\"url\"\r\n            inputMode=\"url\"\r\n            placeholder=\"Click here to scan QR code\"\r\n            onFocus={(e) => {\r\n              e.target.value = '';\r\n            }}\r\n            onChange={handleNativeScan}\r\n            className=\"native-scan-input\"\r\n            autoFocus\r\n          />\r\n          <p className=\"hint-text\">Your device's QR scanner will open automatically</p>\r\n        </div>\r\n      )}\r\n\r\n      {scannedUrl && (\r\n        <div className=\"scan-result\">\r\n          <p><strong>Scanned URL:</strong> {scannedUrl}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {isLoading && (\r\n        <div className=\"loading-indicator\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Processing...</p>\r\n        </div>\r\n      )}\r\n\r\n      {(result || error) && (\r\n        <button \r\n          onClick={restartScanning}\r\n          className=\"restart-button\"\r\n        >\r\n          Scan Another Code\r\n        </button>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"result-container\">\r\n          <h3>Registration Details:</h3>\r\n          <div className=\"registration-details\">\r\n            <p><strong>Name:</strong> {result.Name}</p>\r\n            <p><strong>Title:</strong> {result.Title}</p>\r\n            <p><strong>Email:</strong> {result.Email}</p>\r\n            <p><strong>Phone:</strong> {result.Phone}</p>\r\n            <p><strong>Preferred Contact:</strong> {result.Preferred_Contact}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPDFApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}